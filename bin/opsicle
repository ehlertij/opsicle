#!/usr/bin/env ruby
require 'rubygems'
require 'commander/import'
require 'opsicle'

# :name is optional, otherwise uses the basename of this executable
program :name, 'opsicle'
program :version, Opsicle::VERSION
program :description, 'Opsworks Command Line Utility Belt'
program :help, 'Documentation', 'For documentation and help in setting up your configuration files, '\
                                'see Opsicle\'s GitHub repo: https://github.com/sportngin/opsicle'

global_option('--verbose'){ $verbose = true }

if ENV['DEBUG']
  always_trace!
  $debug = true
else
  never_trace!
end
$verbose = true  if ENV['VERBOSE']


default_command :help

command :deploy do |c|
  c.syntax = "opsicle deploy <environment>"
  c.description = "Deploy your current app to the given OpsWorks stack"
  c.action do |args, options|
    raise ArgumentError, "Environment is required" unless args.first
    Opsicle::Deploy.new(args.first).execute(options.__hash__)
  end
end

command :list do |c|
  c.syntax = "opsicle list <environment>"
  c.description = "List all apps in the given environment"
  c.action do |args, options|
    raise ArgumentError, "Environment is required" unless args.first
    Opsicle::List.new(args.first).execute(options.__hash__)
  end
end

command :ssh do |c|
  c.syntax = "opsicle ssh <environment>"
  c.description = "SSH access to instances in the given Opsworks stack"
  c.action do |args, options|
    raise ArgumentError, "Environment is required" unless args.first
    Opsicle::SSH.new(args.first).execute(options.__hash__)
  end
end

command 'ssh-key' do |c|
  c.syntax = "opsicle ssh-key <environment> <key-file>"
  c.description = "Setup you user ssh key(PUBLIC KEY)"
  c.action do |args, options|
    raise ArgumentError, "Environment is required" unless args.first
    raise ArgumentError, "ssh public key-file is required" unless args[1]
    Opsicle::SSHKey.new(*args).execute(options.__hash__)
  end
end
